name: Build MicroPython

permissions:
  contents: write

on:
  push:
    branches:
      - main
    tags:
      - 'v*'  # Este evento se activará cuando se haga push de un tag que comience con 'v'
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout MicroPython
      run: git clone --recurse-submodules https://github.com/micropython/micropython.git

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libffi-dev git pkg-config \
            libssl-dev python3 python3-pip python3-venv wget flex bison gperf \
            ccache dfu-util libusb-1.0-0 cmake ninja-build gcc-arm-none-eabi
            

    - name: Checkout Custom Libraries
      run: git clone https://github.com/peterhinch/micropython-fourier.git ./custom_libs

    - name: Copy Libraries
      run: |
        cp -r ./custom_libs/* micropython/lib/
        
    - name: Checkout ESP32-S3 Board Configurations
      run: git clone https://github.com/PIBSAS/ESP32-S3-WROOM-1-N16R8.git
    
    - name: Copy ESP32-S3 Board Configurations
      run: |
        cd ESP32-S3-WROOM-1-N16R8
        cp -r GENERIC_S3_N16R8 ./../micropython/ports/esp32/boards/

    - name: Setup ESP-IDF
      run: |
        cd
        mkdir esp
        cd esp
        git clone -b v5.2.2 --recursive https://github.com/espressif/esp-idf.git
        cd esp-idf/tools
        python3 idf_tools.py install cmake
        cd ..
        ./install.sh esp32s3
        echo "source $PWD/export.sh" >> $GITHUB_ENV  # Esto se mantiene para otros pasos
        echo "IDF_PATH=$PWD/esp-idf" >> $GITHUB_ENV  # Exporta la ruta del ESP-IDF
        echo "PATH=$IDF_PATH/tools:$PATH" >> $GITHUB_ENV  # Añade herramientas ESP-IDF al PATH
        
    - name: Build MicroPython for ESP32-S3
      run: |
        cd micropython
        make -C mpy-cross
        source $HOME/esp/esp-idf/export.sh  # Cargar manualmente el entorno en este paso
        export IDF_TARGET=esp32s3
        cd ports/esp32/
        make submodules
        make BOARD=GENERIC_S3_N16R8 submodules
        make BOARD=GENERIC_S3_N16R8
  
    - name: Build MicroPython for RP2040
      run: |
        cd micropython
        make -C mpy-cross
        cd ports/rp2
        make submodules
        make
        
    - name: Build MicroPython for Pico W
      run: |
        cd micropython
        make -C mpy-cross
        cd ports/rp2
        make BOARD=RPI_PICO_W submodules  # Clonar submódulos específicos para Pico W
        make BOARD=RPI_PICO_W clean  # Limpiar compilaciones anteriores
        make BOARD=RPI_PICO_W  # Compilar para Pico W

    - name: Build MicroPython for ESP32-S3
      run: |
        cd micropython
        make -C mpy-cross
        export IDF_PATH="$HOME/esp/esp-idf"  # Ruta del ESP-IDF
        export PATH="$IDF_PATH/tools:$PATH"  # Añadir herramientas ESP-IDF al PATH
        export IDF_TARGET=esp32s3
        cd ports/esp32/
        make submodules
        make BOARD=GENERIC_S3_N16R8 submodules
        make BOARD=GENERIC_S3_N16R8

    - name: Move .uf2 files to artifacts
      run: |
        mkdir -p ./artifacts
        cp micropython/ports/rp2/build-RPI_PICO/*.uf2 ./artifacts/RP2040.uf2
        cp micropython/ports/rp2/build-RPI_PICO_W/*.uf2 ./artifacts/RP2040W.uf2
        cp -r micropython/ports/esp32/build-GENERIC_S3_N16R8/bootloader/bootloader.bin ./artifacts/
        cp -r micropython/ports/esp32/build-GENERIC_S3_N16R8/partition_table/partition-table.bin ./artifacts/
        cp micropython/ports/esp32/build-GENERIC_S3_N16R8/micropython.bin ./artifacts/ESP32_micropython.bin
        
    - name: Generate Tag
      id: tag
      run: echo "TAG_NAME=release-$(date +'%Y%m%d-%H%M')" >> $GITHUB_ENV

    - name: Create Release
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: false
        automatic_release_tag: ${{ env.TAG_NAME }}  # Usa el nombre del tag generado
        title: "Release for version ${{ env.TAG_NAME }}"
        files: ./artifacts/*
